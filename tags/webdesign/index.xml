<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>webdesign on Sign o&#39; the Times</title>
    <link>https://moritz.sauer.io/tags/webdesign/</link>
    <description>Recent content in webdesign on Sign o&#39; the Times</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-DE</language>
    <copyright>Alle Rechte vorbehalten</copyright>
    <lastBuildDate>Fri, 05 Jun 2020 13:30:02 +0200</lastBuildDate>
    
	<atom:link href="https://moritz.sauer.io/tags/webdesign/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>.htaccess – Verschiedene Snippets</title>
      <link>https://moritz.sauer.io/schreibt/2020-06-05-htaccess/</link>
      <pubDate>Fri, 05 Jun 2020 13:30:02 +0200</pubDate>
      
      <guid>https://moritz.sauer.io/schreibt/2020-06-05-htaccess/</guid>
      <description>Mit der .htaccess-Datei steuerst Du das Verhalten des Servers, der Deine Webseiten ausliefert. Dazu gehören passwortgeschützte Websites, direkte Umleitungen von URLs oder auch die Kompression der Auslieferung via gzip.
Inhaltsverzeichnis
 https forcieren gzip-Komprimierung aktivieren    Warnung: Sollten die folgenden Code-Schnippsel nicht funktionieren, hat das sicherlich etwas mit den Server-Einstellungen Deines Anbieters zu tun. Die Code-Schnippsel funktionieren bei meinem Anbieter HostEurope. Wenn etwas nicht funktioniert, bitte nicht mich kontaktieren, sondern den Support Deines Anbieters.</description>
    </item>
    
    <item>
      <title>Einfaches Raster mit dem CSS Grid</title>
      <link>https://moritz.sauer.io/schreibt/2020-06-04-grid/</link>
      <pubDate>Thu, 04 Jun 2020 15:33:03 +0200</pubDate>
      
      <guid>https://moritz.sauer.io/schreibt/2020-06-04-grid/</guid>
      <description>Grid Mit der CSS-Eigenschaft grid baust Du Dir schnell äußerst flexible Raster für Deine Website. grid besitzt die Komplexität, die sich Webdesigner immer gewünscht haben.
  Eltern-Element Um das Raster aufzuziehen, brauchst Du einen Container, der als Eltern-Element dient und das Layout-Modell ins Leben ruft. Das geschieht mit display: grid;. Mit grid-template-columns bestimmst Du anschließend die Anzahl der Spalten/columns, die grid aufbauen soll.
Im unteren Beispiel baut das Raster drei Spalten auf.</description>
    </item>
    
    <item>
      <title>HTML-Typographie – Alle HTML5-Elemente teste</title>
      <link>https://moritz.sauer.io/schreibt/2020-06-03-html-typografie-test/</link>
      <pubDate>Wed, 03 Jun 2020 13:30:02 +0200</pubDate>
      
      <guid>https://moritz.sauer.io/schreibt/2020-06-03-html-typografie-test/</guid>
      <description>Das ist der Anreisser mit &amp;lt;p&amp;gt; und der Klasse .teaser. Jemand musste Josef K. verleumdet haben, denn ohne dass er etwas Böses getan hätte, wurde er eines Morgens verhaftet. »Wie ein Hund!« sagte er, es war, als sollte die Scham ihn überleben. Inhaltsverzeichnis  HTML-Überschriften &amp;lt;a&amp;gt; – Links Listen &amp;lt;strong&amp;gt; – Starke Betonung &amp;lt;em&amp;gt; - Betonung &amp;lt;pre&amp;gt; Und so sehen Code-Beispiele aus &amp;lt;code&amp;gt; – Code per Inline-Element anzeigen. &amp;lt;blockquote&amp;gt; Zitat &amp;lt;cite&amp;gt; – Zitate als Inline-Elemente.</description>
    </item>
    
    <item>
      <title>Hugo – If-Abfragen</title>
      <link>https://moritz.sauer.io/schreibt/2020-06-01-hugo-if/</link>
      <pubDate>Fri, 01 May 2020 22:39:29 +0200</pubDate>
      
      <guid>https://moritz.sauer.io/schreibt/2020-06-01-hugo-if/</guid>
      <description>Bei meiner Webdesign-Arbeit mit dem Website Generator Hugo stolpere ich immer wieder über die Konstruktion von if- oder where-Abfragen. Darum sammel ich an dieser Stelle Beispiele und Varianten.
Inhaltsverzeichnis
 Wenn in .Section, dann… Wenn Parameter 1 oder 2 vorhanden ist, dann… Wenn Wert nicht existiert, dann… Wenn in Kategorie X, dann…    Wenn in .Section, dann… {{ if (eq .Section &amp;quot;pages&amp;quot;) }} &amp;lt;!-- wenn in Section pages --&amp;gt; {{ end }} Wenn Parameter 1 oder 2 vorhanden ist, dann… {{ if or .</description>
    </item>
    
    <item>
      <title>Hugo – Range-Schleifen</title>
      <link>https://moritz.sauer.io/schreibt/2020-06-01-hugo-range/</link>
      <pubDate>Fri, 01 May 2020 14:39:29 +0200</pubDate>
      
      <guid>https://moritz.sauer.io/schreibt/2020-06-01-hugo-range/</guid>
      <description>Bei meiner Webdesign-Arbeit mit dem Website Generator Hugo stolpere ich immer wieder über die Syntax von range-Schleifen. Hier eine Liste verschiedener Varianten, um Beiträge auszugeben.
Inhaltsverzeichnis
 Eine Section mit Index-Seite ausgeben Eine Section ohne Index-Seite ausgeben Ausgabe steuern nach Schlagworten Range und Data    Eine Section mit Index-Seite ausgeben {{ range where .Site.Pages &amp;quot;Section&amp;quot; &amp;quot;blog&amp;quot; }} &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;{{.Permalink}}&amp;quot;&amp;gt;{{.Title}}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; {{ end }} Eine Section ohne Index-Seite ausgeben {{ range where .</description>
    </item>
    
  </channel>
</rss>